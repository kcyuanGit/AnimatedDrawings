name: Build & Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: <your-aws-region>

      # - name: Install Docker
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker.io

      # - name: Build and Push Docker image
      #   run: |
      #     cd torchserve
      #     docker build -t ai-animated-images .
      #     docker tag ai-animated-images:latest kcyuan/ai-animated-images:latest
      #     docker login --username kcyuan --password ${{ secrets.DOCKERHUB_TOKEN }}
      #     docker push kcyuan/ai-animated-images:latest
    - name: Setup AWS CLI
      run: |
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Configure AWS Credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Retrieve Public IP of EC2 instance
      id: ec2
      run: |
        INSTANCE_PUBLIC_IP=$(aws ec2 describe-instances --instance-ids ${{ secrets.INSTANCE_ID }} --query "Reservations[].Instances[].PublicIpAddress" --output text)
        echo "::set-output name=instance_ip::$INSTANCE_PUBLIC_IP"

      - name: Deploy to EC2 instances
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_AWS_KCYUAN_EC2 }}
            SSH_HOST: "ec2-52-8-240-120.us-west-1.compute.amazonaws.com"
            SSH_USER: "ubuntu"
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key.pem
           ssh -o StrictHostKeyChecking=no -i private_key.pem ${SSH_USER}@${SSH_HOST} -vv "docker pull kcyuan/ai-animated-images:latest"
           ssh -o StrictHostKeyChecking=no -i private_key.pem ${SSH_USER}@${SSH_HOST} -vv "docker run -d --name docker_torchserve -p 8080:8080 -p 8081:8081  --name ai-animated-images kcyuan/ai-animated-images:latest"